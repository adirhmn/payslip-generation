// Code generated by MockGen. DO NOT EDIT.
// Source: repository_db.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	overtime "payslip-generation-system/internal/entity/overtime"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockdbRepoProvider is a mock of dbRepoProvider interface.
type MockdbRepoProvider struct {
	ctrl     *gomock.Controller
	recorder *MockdbRepoProviderMockRecorder
}

// MockdbRepoProviderMockRecorder is the mock recorder for MockdbRepoProvider.
type MockdbRepoProviderMockRecorder struct {
	mock *MockdbRepoProvider
}

// NewMockdbRepoProvider creates a new mock instance.
func NewMockdbRepoProvider(ctrl *gomock.Controller) *MockdbRepoProvider {
	mock := &MockdbRepoProvider{ctrl: ctrl}
	mock.recorder = &MockdbRepoProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockdbRepoProvider) EXPECT() *MockdbRepoProviderMockRecorder {
	return m.recorder
}

// GetOvertime mocks base method.
func (m *MockdbRepoProvider) GetOvertime(ctx context.Context, userID, periodID int, date time.Time) (overtime.Overtime, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOvertime", ctx, userID, periodID, date)
	ret0, _ := ret[0].(overtime.Overtime)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOvertime indicates an expected call of GetOvertime.
func (mr *MockdbRepoProviderMockRecorder) GetOvertime(ctx, userID, periodID, date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOvertime", reflect.TypeOf((*MockdbRepoProvider)(nil).GetOvertime), ctx, userID, periodID, date)
}

// InsertOvertime mocks base method.
func (m *MockdbRepoProvider) InsertOvertime(ctx context.Context, ot overtime.Overtime) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertOvertime", ctx, ot)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertOvertime indicates an expected call of InsertOvertime.
func (mr *MockdbRepoProviderMockRecorder) InsertOvertime(ctx, ot interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertOvertime", reflect.TypeOf((*MockdbRepoProvider)(nil).InsertOvertime), ctx, ot)
}
