// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	audit "payslip-generation-system/internal/entity/audit"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuditRepositoryProvider is a mock of AuditRepositoryProvider interface.
type MockAuditRepositoryProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAuditRepositoryProviderMockRecorder
}

// MockAuditRepositoryProviderMockRecorder is the mock recorder for MockAuditRepositoryProvider.
type MockAuditRepositoryProviderMockRecorder struct {
	mock *MockAuditRepositoryProvider
}

// NewMockAuditRepositoryProvider creates a new mock instance.
func NewMockAuditRepositoryProvider(ctrl *gomock.Controller) *MockAuditRepositoryProvider {
	mock := &MockAuditRepositoryProvider{ctrl: ctrl}
	mock.recorder = &MockAuditRepositoryProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuditRepositoryProvider) EXPECT() *MockAuditRepositoryProviderMockRecorder {
	return m.recorder
}

// InsertAuditLog mocks base method.
func (m *MockAuditRepositoryProvider) InsertAuditLog(ctx context.Context, log audit.AuditLog) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertAuditLog", ctx, log)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertAuditLog indicates an expected call of InsertAuditLog.
func (mr *MockAuditRepositoryProviderMockRecorder) InsertAuditLog(ctx, log interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertAuditLog", reflect.TypeOf((*MockAuditRepositoryProvider)(nil).InsertAuditLog), ctx, log)
}

// InsertRequestLog mocks base method.
func (m *MockAuditRepositoryProvider) InsertRequestLog(ctx context.Context, log audit.RequestLog) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertRequestLog", ctx, log)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertRequestLog indicates an expected call of InsertRequestLog.
func (mr *MockAuditRepositoryProviderMockRecorder) InsertRequestLog(ctx, log interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertRequestLog", reflect.TypeOf((*MockAuditRepositoryProvider)(nil).InsertRequestLog), ctx, log)
}
